<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	
	<context id="liupin" targetRuntime="MyBatis3">
        
		<!-- mbg 内置插件 -->
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin>
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>

		<!--去除注释 -->
		<commentGenerator>
			<property name="suppressAllComments" value="false" />
		</commentGenerator>

		<!--数据库连接 -->
		<jdbcConnection driverClass="org.postgresql.Driver"
			connectionURL="jdbc:postgresql://localhost:5432/IBeaconManageSystem"
			userId="postgres" password="123456">
		</jdbcConnection>

		<!--默认false Java type resolver will always use java.math.BigDecimal if 
			the database column is of type DECIMAL or NUMERIC. -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!--生成实体类 指定包名 以及生成的地址 （可以自定义地址，但是路径不存在不会自动创建 使用Maven生成在target目录下，会自动创建） -->
		<javaModelGenerator targetPackage="com.freetmp.xmbg.postgresql.entity" targetProject="MAVEN">
			<property name="enableSubPackages" value="false" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!--生成SQLMAP文件 -->
		<sqlMapGenerator targetPackage="com.freetmp.xmbg.postgresql.mapper" targetProject="MAVEN">
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!--生成Dao文件 可以配置 type="XMLMAPPER"生成xml的dao实现 context id="DB2Tables" 修改targetRuntime="MyBatis3" -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="com.freetmp.xmbg.postgresql.mapper" targetProject="MAVEN">
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!--对应数据库表 mysql可以加入主键自增 字段命名 忽略某字段等 -->
		<table tableName="Admin" domainObjectName="Admin" delimitIdentifiers="true" delimitAllColumns="true">
			<generatedKey column="ID" sqlStatement="select nextval('&quot;AdminSequence&quot;'::regclass)" />
		</table>
		<table tableName="Beacon" domainObjectName="Beacon" delimitIdentifiers="true" delimitAllColumns="true">
			<generatedKey column="ID" sqlStatement="select nextval('&quot;BeaconSequence&quot;'::regclass)" />
		</table>
	</context>
	
</generatorConfiguration>