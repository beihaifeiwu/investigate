<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--                                                                         
    Copyright 2015-2015 the original author or authors.                         
    
    HaHa,I have the right to do anything!                               
-->

<mapper namespace="com.freetmp.xmbg.mysql.mapper.TaskMapper" >
  
  <!-- 
      the basic mapping of POJO fields and db table's columns
  -->
  <resultMap id="BaseResultMap" type="com.freetmp.xmbg.mysql.entity.Task" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
  </resultMap>
  
  <!-- 
      the where condition clause of the helper class example
  -->
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <!-- 
      the where condition for updating the db data using the example helper class
  -->
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <!-- 
      the basic columns of db table used by select
  -->
  <sql id="Base_Column_List" >
    id, title, description, user_id
  </sql>
  
  <!-- 
      select the db data of the specific table by the example condition
  -->
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.freetmp.xmbg.mysql.entity.TaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ss_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null and limit>=0 and offset != null" >
      limit #{offset} , #{limit}
    </if>
  </select>
  
  <!-- 
      select the db data of the specific table by primary key
  -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ss_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 
      delete the db data by table primary key
  -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ss_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <!-- 
      delete the db data by example condition
  -->
  <delete id="deleteByExample" parameterType="com.freetmp.xmbg.mysql.entity.TaskExample" >
    delete from ss_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <!-- 
      insert the db data for all fields
  -->
  <insert id="insert" parameterType="com.freetmp.xmbg.mysql.entity.Task" >
    insert into ss_task (id, title, description, 
      user_id)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT})
  </insert>
  
  <!-- 
      insert the db data with legal fields
  -->
  <insert id="insertSelective" parameterType="com.freetmp.xmbg.mysql.entity.Task" >
    insert into ss_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  
  <!-- 
      count the db table rows by example condition
  -->
  <select id="countByExample" parameterType="com.freetmp.xmbg.mysql.entity.TaskExample" resultType="java.lang.Integer" >
    select count(*) from ss_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <!-- 
      update the db data with legal fields selected by example condition
  -->
  <update id="updateByExampleSelective" parameterType="map" >
    update ss_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- 
      update the db data with all fields by example condition
  -->
  <update id="updateByExample" parameterType="map" >
    update ss_task
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- 
      update the db data with legal fields selected by table primary key
  -->
  <update id="updateByPrimaryKeySelective" parameterType="com.freetmp.xmbg.mysql.entity.Task" >
    update ss_task
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 
      update the db data by table primary key
  -->
  <update id="updateByPrimaryKey" parameterType="com.freetmp.xmbg.mysql.entity.Task" >
    update ss_task
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 
      insert a batch of db data for all fields
  -->
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into ss_task (title, description, user_id
      )
    values 
    <foreach collection="list" item="item" index="index" separator="," >
       (#{item.title,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.userId,jdbcType=BIGINT}
        )
    </foreach>
  </insert>
  
  <!-- 
      update a batch of db data with legal fields
  -->
  <update id="batchUpdate" parameterType="java.util.List" >
    <foreach collection="list" item="item" index="index" separator=";" >
      update ss_task
      <set >
        <if test="item.title != null" >
          title = #{item.title,jdbcType=VARCHAR},
        </if>
        <if test="item.description != null" >
          description = #{item.description,jdbcType=VARCHAR},
        </if>
        <if test="item.userId != null" >
          user_id = #{item.userId,jdbcType=BIGINT},
        </if>
      </set>
      where id = #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  
  <!-- 
      the where condition clause constructed by POJO field name
  -->
  <sql id="Identifiers_Array_Where" >
    <foreach collection="array" item="item" index="index" separator=" and " >
      <if test="item == 'id'" >
        id = #{record.id,jdbcType=BIGINT}
      </if>
      <if test="item == 'title'" >
        title = #{record.title,jdbcType=VARCHAR}
      </if>
      <if test="item == 'description'" >
        description = #{record.description,jdbcType=VARCHAR}
      </if>
      <if test="item == 'userId'" >
        user_id = #{record.userId,jdbcType=BIGINT}
      </if>
    </foreach>
  </sql>
  
  <!-- 
      update the db data if exists or just insert
  -->
  <update id="upsert" parameterType="map" >
    update ss_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
    </set>
    <where >
      <include refid="Identifiers_Array_Where" />
    </where>
    ; insert into ss_task(title,description,user_id) 
     select #{record.title,jdbcType=VARCHAR},#{record.description,jdbcType=VARCHAR},#{record.userId,jdbcType=BIGINT}
        
     where not exists (select 1 from ss_task
    <where >
      <include refid="Identifiers_Array_Where" />
    </where>
     )
  </update>
  
  <!-- 
      the batch version of upsert
  -->
  <update id="batchUpsert" parameterType="map" >
    <foreach collection="records" item="record" index="index" separator=" ; " >
      update ss_task
      <set >
        <if test="record.id != null" >
          id = #{record.id,jdbcType=BIGINT},
        </if>
        <if test="record.title != null" >
          title = #{record.title,jdbcType=VARCHAR},
        </if>
        <if test="record.description != null" >
          description = #{record.description,jdbcType=VARCHAR},
        </if>
        <if test="record.userId != null" >
          user_id = #{record.userId,jdbcType=BIGINT},
        </if>
      </set>
      <where >
        <include refid="Identifiers_Array_Where" />
      </where>
      ; insert into ss_task(title,description,user_id) 
       select #{record.title,jdbcType=VARCHAR},#{record.description,jdbcType=VARCHAR},#{record.userId,jdbcType=BIGINT}
          
       where not exists (select 1 from ss_task
      <where >
        <include refid="Identifiers_Array_Where" />
      </where>
       )
    </foreach>
  </update>
</mapper>